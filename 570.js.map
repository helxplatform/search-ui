{"version":3,"file":"570.js","mappings":"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","sources":["webpack:///./src/components/pagination-tray/pagination-tray.js","webpack:///./src/components/context.js","webpack:///./src/components/form/form.js","webpack:///./src/components/kg-links.js","webpack:///./src/components/link.js","webpack:///./src/components/graphs/knowledge-graphs.js","webpack:///./src/components/graphs/question-graphs.js","webpack:///./src/components/result-card/overview-tab.js","webpack:///./src/components/result-card/studies-tab.js","webpack:///./src/components/result-card/knowledge-graphs-tab.js","webpack:///./src/components/result-card/result-card.js","webpack:///./src/components/result-modal/tabs/answer-viewer-tab.js","webpack:///./src/components/result-modal/tabs/overview-tab.js","webpack:///./src/components/result-modal/tabs/studies-tab.js","webpack:///./src/components/result-modal/tabs/knowledge-graphs-tab.js","webpack:///./src/components/result-modal/tabs/tranql-tab.js","webpack:///./src/components/result-modal/tabs/question-graphs-tab.js","webpack:///./src/components/result-modal/result-modal.js","webpack:///./src/components/results/results.js","webpack:///./src/components/variables-list.js"],"sourcesContent":["import { navigate } from '@reach/router'\nimport { Pagination, Space } from 'antd'\nimport { useHelxSearch } from '../'\nimport './pagination-tray.css'\n\nexport const PaginationTray = ({ count }) => {\n  const { basePath, query, currentPage } = useHelxSearch()\n\n  return (\n    <Space role=\"navigation\" aria-label=\"Pagination Navigation\" className=\"pagination-tray\">\n      <Pagination\n        current={ currentPage }\n        defaultPageSize={ 20 }\n        total={ count }\n        showTotal={total => `${ total } results`}\n        onChange={ (page, pageSize) => navigate(`${ basePath }?q=${ query }&p=${ page }`) }\n        showSizeChanger={ false }\n      />\n    </Space>\n  )\n}\n","import React, { createContext, useCallback, useContext, useEffect, useRef, useState } from 'react'\nimport axios from 'axios'\nimport { useLocation, useNavigate } from '@reach/router'\nimport './search.css'\nimport { SearchResultModal } from './'\n\n//\n\nexport const HelxSearchContext = createContext({})\nexport const useHelxSearch = () => useContext(HelxSearchContext)\n\n//\n\nconst PER_PAGE = 50\nconst tempSearchFacets = [\n  'ALL',\n  'Biolink',\n  'CDE',\n  'Harmonized',\n  'LOINC',\n  'PhenX',\n].sort((f, g) => f.toLowerCase() < g.toLowerCase() ? -1 : 1)\n\n//\n\nconst validateResult = result => {\n  return result.description.trim() && result.name.trim()\n}\n\nexport const HelxSearch = ({ searchURL = 'https://helx.renci.org', basePath = '', children }) => {\n  const [query, setQuery] = useState('')\n  const [isLoadingResults, setIsLoadingResults] = useState(false);\n  const [error, setError] = useState({})\n  const [results, setResults] = useState([])\n  const [totalResults, setTotalResults] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [pageCount, setPageCount] = useState(0)\n  const location = useLocation()\n  const [selectedResult, setSelectedResult] = useState(null)\n\n  const inputRef = useRef()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    // this lets the user press backslash to jump focus to the search box\n    const handleKeyPress = event => {\n      if (event.keyCode === 220) { // backslash (\"\\\") key \n        if (inputRef.current) {\n          event.preventDefault()\n          inputRef.current.select()\n          window.scroll({ top: 0 })\n        }\n      }\n    }\n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [])\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search)\n    setQuery(queryParams.get('q') || '')\n    setCurrentPage(+queryParams.get('p') || 1)\n  }, [location.search])\n\n  const validationReducer = (buckets, hit) => {\n    const valid = validateResult(hit)\n    if (valid) {\n      return { valid: [...buckets.valid, hit], invalid: buckets.invalid }\n    } else {\n      return { valid: buckets.valid, invalid: [...buckets.invalid, hit] }\n    }\n  }\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      setIsLoadingResults(true)\n      try {\n        const params = {\n          index: 'concepts_index',\n          query: query,\n          offset: (currentPage - 1) * PER_PAGE,\n          size: PER_PAGE,\n        }\n        const response = await axios.post(`${searchURL}/search`, params)\n        if (response.status === 200 && response.data.status === 'success' && response?.data?.result?.hits) {\n          const unsortedHits = response.data.result.hits.hits.map(r => r._source)\n          // gather invalid results: remove from rendered results and dump to console.\n          let hits = unsortedHits.reduce(validationReducer, { valid: [], invalid: [] })\n          if (hits.invalid.length) {\n            console.error(`The following ${ hits.invalid.length } invalid results ` + \n              `were removed from the ${ hits.valid.length + hits.invalid.length } ` +\n              `returned results:`, hits.invalid)\n          }\n          setResults(hits.valid)\n          setTotalResults(response.data.result.total_items)\n          setIsLoadingResults(false)\n        } else {\n          setResults([])\n          setTotalResults(0)\n          setIsLoadingResults(false)\n        }\n      } catch (error) {\n        console.log(error)\n        setError({ message: 'An error occurred!' })\n        setIsLoadingResults(false)\n      }\n    }\n    if (query) {\n      fetchResults()\n    }\n  }, [query, currentPage, searchURL, setResults, setError])\n\n  useEffect(() => {\n    setPageCount(Math.ceil(totalResults / PER_PAGE))\n  }, [totalResults])\n\n  const fetchGraphs = useCallback(async (tag_id) => {\n    try {\n      const { data } =  await axios.post(`${ searchURL }/search_kg`, {\n        index: 'kg_index',\n        unique_id: tag_id,\n        query: query,\n        size: 100,\n      })\n      if (!data || data.result.total_items === 0) {\n        return []\n      }\n      console.log({\n        knowledge: data.result.hits.hits.map(graph => graph._source.knowledge_graph.knowledge_graph),\n        question: data.result.hits.hits.map(graph => graph._source.knowledge_graph.question_graph),\n      })\n      return {\n        knowledge: data.result.hits.hits.map(graph => graph._source.knowledge_graph.knowledge_graph),\n        question: data.result.hits.hits.map(graph => graph._source.knowledge_graph.question_graph),\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [searchURL, results])\n\n  const fetchStudyVariables = useCallback(async (_id, _query) => {\n    try {\n      const { data } = await axios.post(`${searchURL}/search_var`, {\n        concept: _id,\n        index: 'variables_index',\n        query: _query,\n        size: 1000\n      })\n      if (!data) {\n        return []\n      }\n      return data\n      // return []\n    } catch (error) {\n      console.error(error)\n    }\n  }, [searchURL, results])\n\n  const doSearch = queryString => {\n    const trimmedQuery = queryString.trim()\n    if (trimmedQuery !== '') {\n      setQuery(trimmedQuery)\n      setCurrentPage(1)\n      navigate(`${ basePath }?q=${trimmedQuery}&p=1`)\n    }\n  }\n\n\n  return (\n    <HelxSearchContext.Provider value={{\n      query, setQuery, doSearch, fetchGraphs, fetchStudyVariables, inputRef,\n      error, isLoadingResults,\n      results, totalResults,\n      currentPage, setCurrentPage, perPage: PER_PAGE, pageCount,\n      facets: tempSearchFacets,\n      selectedResult, setSelectedResult,\n    }}>\n      { children }\n      <SearchResultModal\n        result={ selectedResult }\n        visible={ selectedResult !== null}\n        closeHandler={ () => setSelectedResult(null) }\n      />\n    </HelxSearchContext.Provider>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Button, Form, Input } from 'antd'\nimport { useHelxSearch } from '../'\nimport './form.css'\nimport HeLxLogo from '../../images/helx-logo.png'\n\nexport const SearchForm = () => {\n  const { doSearch, inputRef, query, totalResults } = useHelxSearch()\n  const [searchTerm, setSearchTerm] = useState(query)\n\n  const handleChangeQuery = event => setSearchTerm(event.target.value)\n\n  const handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      doSearch(searchTerm)\n    }\n  }\n\n  // This enables a two-way binding from this component's state (searchTerm) and that provided by the search-context,\n  // ..but only when a new search is executed.\n  // This component maintains the query seen in the input field (named `searchTerm`).\n  // This state (searchTerm) must be explicitly updated to match the context's query when the context's query changes.\n  // (Note that the converse relationship is already handled by the doSearch function.)\n  useEffect(() => setSearchTerm(query), [query])\n\n  return (\n    <Form onFinish={ () => doSearch(searchTerm) } className=\"search-form\">\n      <Form.Item className=\"search-form-logo\"><img src={ HeLxLogo } width=\"100\" /></Form.Item>\n      <Form.Item className=\"search-input\">\n        <Input\n          ref={ inputRef }\n          allowClear\n          autoFocus\n          placeholder=\"Enter search term\"\n          value={ searchTerm }\n          onChange={ handleChangeQuery }\n          onKeyDown={ handleKeyDown }\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button htmlType=\"submit\" type=\"primary\" className=\"search-button\">Search</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n","const biolink_lookup = {\n    \"APO\": \"http://purl.obolibrary.org/obo/APO_\",\n    \"Aeolus\": \"http://translator.ncats.nih.gov/Aeolus_\",\n    \"BIOGRID\": \"http://identifiers.org/biogrid/\",\n    \"BIOSAMPLE\": \"http://identifiers.org/biosample/\",\n    \"BSPO\": \"http://purl.obolibrary.org/obo/BSPO_\",\n    \"CAID\": \"http://reg.clinicalgenome.org/redmine/projects/registry/genboree_registry/by_caid?caid=\",\n    \"CHEBI\": \"http://purl.obolibrary.org/obo/CHEBI_\",\n    \"CHEMBL.COMPOUND\": \"http://identifiers.org/chembl.compound/\",\n    \"CHEMBL.MECHANISM\": \"https://www.ebi.ac.uk/chembl/mechanism/inspect/\",\n    \"CHEMBL.TARGET\": \"http://identifiers.org/chembl.target/\",\n    \"CID\": \"http://pubchem.ncbi.nlm.nih.gov/compound/\",\n    \"CL\": \"http://purl.obolibrary.org/obo/CL_\",\n    \"CLINVAR\": \"http://identifiers.org/clinvar/\",\n    \"CLO\": \"http://purl.obolibrary.org/obo/CLO_\",\n    \"COAR_RESOURCE\": \"http://purl.org/coar/resource_type/\",\n    \"CPT\": \"https://www.ama-assn.org/practice-management/cpt/\",\n    \"CTD\": \"http://translator.ncats.nih.gov/CTD_\",\n    \"ClinVarVariant\": \"http://www.ncbi.nlm.nih.gov/clinvar/variation/\",\n    \"DBSNP\": \"http://identifiers.org/dbsnp/\",\n    \"DGIdb\": \"https://www.dgidb.org/interaction_types\",\n    \"DOID\": \"http://purl.obolibrary.org/obo/DOID_\",\n    \"DRUGBANK\": \"http://identifiers.org/drugbank/\",\n    \"DrugCentral\": \"http://translator.ncats.nih.gov/DrugCentral_\",\n    \"EC\": \"http://www.enzyme-database.org/query.php?ec=\",\n    \"ECTO\": \"http://purl.obolibrary.org/obo/ECTO_\",\n    \"EDAM-DATA\": \"http://edamontology.org/data_\",\n    \"EDAM-FORMAT\": \"http://edamontology.org/format_\",\n    \"EDAM-OPERATION\": \"http://edamontology.org/operation_\",\n    \"EDAM-TOPIC\": \"http://edamontology.org/topic_\",\n    \"EFO\": \"http://identifiers.org/efo/\",\n    \"ENSEMBL\": \"http://identifiers.org/ensembl/\",\n    \"ExO\": \"http://purl.obolibrary.org/obo/ExO_\",\n    \"FAO\": \"http://purl.obolibrary.org/obo/FAO_\",\n    \"FB\": \"http://identifiers.org/fb/\",\n    \"FBcv\": \"http://purl.obolibrary.org/obo/FBcv_\",\n    \"FlyBase\": \"http://flybase.org/reports/\",\n    \"GAMMA\": \"http://translator.renci.org/GAMMA_\",\n    \"GO\": \"http://purl.obolibrary.org/obo/GO_\",\n    \"GOLD.META\": \"http://identifiers.org/gold.meta/\",\n    \"GOP\": \"http://purl.obolibrary.org/obo/go#\",\n    \"GOREL\": \"http://purl.obolibrary.org/obo/GOREL_\",\n    \"GSID\": \"https://scholar.google.com/citations?user=\",\n    \"GTEx\": \"https://www.gtexportal.org/home/gene/\",\n    \"HANCESTRO\": \"http://www.ebi.ac.uk/ancestro/ancestro_\",\n    \"HCPCS\": \"http://purl.bioontology.org/ontology/HCPCS/\",\n    \"HGNC\": \"http://identifiers.org/hgnc/\",\n    \"HGNC.FAMILY\": \"http://identifiers.org/hgnc.family/\",\n    \"HMDB\": \"http://identifiers.org/hmdb/\",\n    \"HP\": \"http://purl.obolibrary.org/obo/HP_\",\n    \"ICD0\": \"http://translator.ncats.nih.gov/ICD0_\",\n    \"ICD10\": \"http://translator.ncats.nih.gov/ICD10_\",\n    \"ICD9\": \"http://translator.ncats.nih.gov/ICD9_\",\n    \"INCHI\": \"http://identifiers.org/inchi/\",\n    \"INCHIKEY\": \"http://identifiers.org/inchikey/\",\n    \"INTACT\": \"http://identifiers.org/intact/\",\n    \"IUPHAR.FAMILY\": \"http://identifiers.org/iuphar.family/\",\n    \"KEGG\": \"http://identifiers.org/kegg/\",\n    \"LOINC\": \"http://loinc.org/rdf/\",\n    \"MEDDRA\": \"http://identifiers.org/meddra/\",\n    \"MESH\": \"http://identifiers.org/mesh/\",\n    \"MGI\": \"http://identifiers.org/mgi/\",\n    \"MI\": \"http://purl.obolibrary.org/obo/MI_\",\n    \"MIR\": \"http://identifiers.org/mir/\",\n    \"MONDO\": \"http://purl.obolibrary.org/obo/MONDO_\",\n    \"MP\": \"http://purl.obolibrary.org/obo/MP_\",\n    \"MSigDB\": \"https://www.gsea-msigdb.org/gsea/msigdb/\",\n    \"MetaCyc\": \"http://translator.ncats.nih.gov/MetaCyc_\",\n    \"NCBIGENE\": \"http://identifiers.org/ncbigene/\",\n    \"NCBITaxon\": \"http://purl.obolibrary.org/obo/NCBITaxon_\",\n    \"NCIT\": \"http://purl.obolibrary.org/obo/NCIT_\",\n    \"NDDF\": \"http://purl.bioontology.org/ontology/NDDF/\",\n    \"NLMID\": \"https://www.ncbi.nlm.nih.gov/nlmcatalog/?term=\",\n    \"OBAN\": \"http://purl.org/oban/\",\n    \"OBOREL\": \"http://purl.obolibrary.org/obo/RO_\",\n    \"OIO\": \"http://www.geneontology.org/formats/oboInOwl#\",\n    \"OMIM\": \"http://purl.obolibrary.org/obo/OMIM_\",\n    \"ORCID\": \"https://orcid.org/\",\n    \"ORPHA\": \"http://www.orpha.net/ORDO/Orphanet_\",\n    \"ORPHANET\": \"http://identifiers.org/orphanet/\",\n    \"PANTHER.FAMILY\": \"http://identifiers.org/panther.family/\",\n    \"PANTHER.PATHWAY\": \"http://identifiers.org/panther.pathway/\",\n    \"PATO-PROPERTY\": \"http://purl.obolibrary.org/obo/pato#\",\n    \"PDQ\": \"https://www.cancer.gov/publications/pdq#\",\n    \"PHARMGKB.DRUG\": \"http://identifiers.org/pharmgkb.drug/\",\n    \"PHARMGKB.PATHWAYS\": \"http://identifiers.org/pharmgkb.pathways/\",\n    \"PHAROS\": \"http://pharos.nih.gov\",\n    \"PMID\": \"http://www.ncbi.nlm.nih.gov/pubmed/\",\n    \"PO\": \"http://purl.obolibrary.org/obo/PO_\",\n    \"POMBASE\": \"http://identifiers.org/pombase/\",\n    \"PR\": \"http://purl.obolibrary.org/obo/PR_\",\n    \"PUBCHEM.COMPOUND\": \"http://identifiers.org/pubchem.compound/\",\n    \"PUBCHEM.SUBSTANCE\": \"http://identifiers.org/pubchem.substance/\",\n    \"PathWhiz\": \"http://smpdb.ca/pathways/#\",\n    \"REACT\": \"http://www.reactome.org/PathwayBrowser/#/\",\n    \"REPODB\": \"http://apps.chiragjpgroup.org/repoDB/\",\n    \"RGD\": \"http://identifiers.org/rgd/\",\n    \"RHEA\": \"http://identifiers.org/rhea/\",\n    \"RNACENTRAL\": \"http://identifiers.org/rnacentral/\",\n    \"RO\": \"http://purl.obolibrary.org/obo/RO_\",\n    \"RTXKG1\": \"http://kg1endpoint.rtx.ai/\",\n    \"RXNORM\": \"http://purl.bioontology.org/ontology/RXNORM/\",\n    \"ResearchID\": \"https://publons.com/researcher/\",\n    \"SEMMEDDB\": \"https://skr3.nlm.nih.gov/SemMedDB\",\n    \"SGD\": \"http://identifiers.org/sgd/\",\n    \"SIO\": \"http://semanticscience.org/resource/SIO_\",\n    \"SMPDB\": \"http://identifiers.org/smpdb/\",\n    \"SNOMEDCT\": \"http://identifiers.org/snomedct/\",\n    \"SNPEFF\": \"http://translator.ncats.nih.gov/SNPEFF_\",\n    \"ScopusID\": \"https://www.scopus.com/authid/detail.uri?authorId=\",\n    \"TAXRANK\": \"http://purl.obolibrary.org/obo/TAXRANK_\",\n    \"UBERGRAPH\": \"http://translator.renci.org/ubergraph-axioms.ofn#\",\n    \"UBERON\": \"http://purl.obolibrary.org/obo/UBERON_\",\n    \"UBERON_CORE\": \"http://purl.obolibrary.org/obo/uberon/core#\",\n    \"UMLS\": \"http://identifiers.org/umls/\",\n    \"UMLSSC\": \"https://metamap.nlm.nih.gov/Docs/SemanticTypes_2018AB.txt/code#\",\n    \"UMLSSG\": \"https://metamap.nlm.nih.gov/Docs/SemGroups_2018.txt/group#\",\n    \"UMLSST\": \"https://metamap.nlm.nih.gov/Docs/SemanticTypes_2018AB.txt/type#\",\n    \"UNII\": \"http://identifiers.org/unii/\",\n    \"UPHENO\": \"http://purl.obolibrary.org/obo/UPHENO_\",\n    \"UniProtKB\": \"http://identifiers.org/uniprot/\",\n    \"VANDF\": \"https://www.nlm.nih.gov/research/umls/sourcereleasedocs/current/VANDF/\",\n    \"VMC\": \"https://github.com/ga4gh/vr-spec/\",\n    \"WB\": \"http://identifiers.org/wb/\",\n    \"WBPhenotype\": \"http://purl.obolibrary.org/obo/WBPhenotype_\",\n    \"WBVocab\": \"http://bio2rdf.org/wormbase_vocabulary\",\n    \"WIKIDATA\": \"https://www.wikidata.org/wiki/\",\n    \"WIKIDATA_PROPERTY\": \"https://www.wikidata.org/wiki/Property:\",\n    \"WIKIPATHWAYS\": \"http://identifiers.org/wikipathways/\",\n    \"WormBase\": \"https://www.wormbase.org/get?name=\",\n    \"ZFIN\": \"http://identifiers.org/zfin/\",\n    \"ZP\": \"http://purl.obolibrary.org/obo/ZP_\",\n    \"alliancegenome\": \"https://www.alliancegenome.org/\",\n    \"biolink\": \"https://w3id.org/biolink/vocab/\",\n    \"biolinkml\": \"https://w3id.org/biolink/biolinkml/\",\n    \"chembio\": \"http://translator.ncats.nih.gov/chembio_\",\n    \"dcterms\": \"http://purl.org/dc/terms/\",\n    \"dictyBase\": \"http://dictybase.org/gene/\",\n    \"doi\": \"https://doi.org/\",\n    \"fabio\": \"http://purl.org/spar/fabio/\",\n    \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n    \"foodb.compound\": \"http://foodb.ca/compounds/\",\n    \"gff3\": \"https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md#\",\n    \"gpi\": \"https://github.com/geneontology/go-annotation/blob/master/specs/gpad-gpi-2-0.md#\",\n    \"gtpo\": \"https://rdf.guidetopharmacology.org/ns/gtpo#\",\n    \"hetio\": \"http://translator.ncats.nih.gov/hetio_\",\n    \"interpro\": \"https://www.ebi.ac.uk/interpro/entry/\",\n    \"isbn\": \"https://www.isbn-international.org/identifier/\",\n    \"isni\": \"https://isni.org/isni/\",\n    \"issn\": \"https://portal.issn.org/resource/ISSN/\",\n    \"medgen\": \"https://www.ncbi.nlm.nih.gov/medgen/\",\n    \"oboformat\": \"http://www.geneontology.org/formats/oboInOWL#\",\n    \"pav\": \"http://purl.org/pav/\",\n    \"prov\": \"http://www.w3.org/ns/prov#\",\n    \"qud\": \"http://qudt.org/1.1/schema/qudt#\",\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"skos\": \"https://www.w3.org/TR/skos-reference/#\",\n    \"wgs\": \"http://www.w3.org/2003/01/geo/wgs84_pos\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"@vocab\": \"https://w3id.org/biolink/vocab/\"\n}\n\nexport const kgLink = {\n    get_curie_purl: (curie) => {\n        const splitCurrie = curie.split(':')\n        const prefix = splitCurrie[0]\n        const suffix = splitCurrie[1]\n        var matchedPrefix = Object.keys(biolink_lookup).find(k => k === prefix)\n        if (matchedPrefix) {\n            return biolink_lookup[prefix] + suffix\n        } else {\n            return null\n        }\n    }\n}","import React from 'react'\nimport { Link as ReactLink } from '@reach/router'\n\nexport const ExternalLink = ({ to, children, ...props }) => {\n  return (\n    <a\n      href={ to }\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >{ children }</a>\n  )\n}\n\nexport const Link = ({ to, children, ...props }) => {\n  const mailtoPattern = new RegExp(/^mailto:/)\n  const externalUrlPattern = new RegExp(/^https?:\\/\\//)\n  const externalUrlMatch = externalUrlPattern.exec(to)\n  const mailtoMatch = mailtoPattern.exec(to)\n  const LinkComponent = externalUrlMatch || mailtoMatch ? ExternalLink : ReactLink\n  return <LinkComponent to={to} {...props}>{children}</LinkComponent>\n}","import React, { Fragment, useEffect, useState } from 'react'\nimport { kgLink } from '../kg-links'\nimport { Link } from '../link'\nimport './graphs.css'\n\nconst KnowledgeGraph = ({ graph }) => {\n  const [interactions, setInteractions] = useState([])\n\n  useEffect(() => {\n    if (graph) {\n      graph.nodes.forEach(sourceNode => {\n        const outgoingEdge = graph.edges.find(edge => edge.source_id === sourceNode.id)\n        if (outgoingEdge) {\n          const targetNode = graph.nodes.find(node => node.id === outgoingEdge.target_id)\n          let newInteraction = { source: { name: sourceNode.name, id: sourceNode.id }, type: outgoingEdge.type, target: { name: targetNode.name, id: targetNode.id }, publications: outgoingEdge.publications }\n          setInteractions(interactions => [...interactions, newInteraction])\n        }\n      })\n    }\n  }, [graph])\n\n  return interactions.map((interaction, i) => (\n    <Fragment key={ `kg-${i}` }>\n      <div className=\"source-label\"><Link to={kgLink.get_curie_purl(interaction.source.id)}>{interaction.source.name}</Link></div>\n      <div />\n      <div className=\"target-label\"><Link to={kgLink.get_curie_purl(interaction.target.id)}>{interaction.target.name}</Link></div>\n\n      <div className=\"source-node\"><span className=\"node\" /></div>\n      <div className=\"edge\">\n        <div className=\"edge-type\">{interaction.type}</div>\n        <div className=\"edge-references\">\n          {\n            interaction.publications.map((publication, i) => (\n              <Fragment key={`${interaction.source}-pub-${i + 1}`}>\n                [<Link to={ `https://pubmed.ncbi.nlm.nih.gov/${ publication.replace(/^PMID:/, '') }`}>{i + 1}</Link>]\n              </Fragment>\n            ))\n          }\n        </div>\n      </div>\n      <div className=\"target-node\"><span className=\"node\" /></div>\n    </Fragment>\n  ))\n}\n\nconst NoKnowledgeGraphsMessage = () => {\n  return (\n    <div>No Graphs Found</div>\n  )\n}\n\nexport const KnowledgeGraphs = ({ graphs }) => {\n  console.log('in kg', graphs)\n  if (graphs && graphs.length > 0) {\n    return (\n      <div className=\"interactions-grid\">\n        <div className=\"column-title\">Ontological Term)</div>\n        <div className=\"column-title\">Interaction Type</div>\n        <div className=\"column-title\">Linked Term</div>\n        { graphs.map(graph => <KnowledgeGraph graph={graph} />)}\n      </div>\n    )\n  }\n\n  return <NoKnowledgeGraphsMessage />\n}","import React, { Fragment, useEffect, useState } from 'react'\nimport { kgLink } from '../kg-links'\nimport { Link } from '../link'\nimport './graphs.css'\n\nconst QuestionGraph = ({ graph }) => {\n  const [interactions, setInteractions] = useState([])\n\n  useEffect(() => {\n    if (graph) {\n      graph.nodes.forEach(sourceNode => {\n        const outgoingEdge = graph.edges.find(edge => edge.source_id === sourceNode.id)\n        if (outgoingEdge) {\n          const targetNode = graph.nodes.find(node => node.id === outgoingEdge.target_id)\n          let newInteraction = {\n            type: outgoingEdge.id,\n            source: { id: sourceNode.id, name: sourceNode.id },\n            target: { id: targetNode.id, name: targetNode.id },\n          }\n          console.log(newInteraction)\n          setInteractions(interactions => [...interactions, newInteraction])\n        }\n      })\n    }\n  }, [graph])\n\n  return interactions.map((interaction, i) => (\n    <Fragment key={ `kg-${ i }` }>\n      <div className=\"source-label\">{ interaction.source.name }</div>\n      <div />\n      <div className=\"target-label\">{ interaction.target.name }</div>\n\n      <div className=\"source-node\"><span className=\"node\" /></div>\n      <div className=\"edge\">\n        <div className=\"edge-type\">{interaction.type}</div>\n      </div>\n      <div className=\"target-node\"><span className=\"node\" /></div>\n    </Fragment>\n  ))\n}\n\nconst NoQuestionGraphsMessage = () => {\n  return (\n    <div>No Graphs Found</div>\n  )\n}\n\nexport const QuestionGraphs = ({ graphs }) => {\n  console.log('in qg', graphs)\n  if (graphs && graphs.length > 0) {\n    return (\n      <div className=\"interactions-grid\">\n        <div className=\"column-title\">Ontological Term)</div>\n        <div className=\"column-title\">Interaction Type</div>\n        <div className=\"column-title\">Linked Term</div>\n        { graphs.map(graph => <QuestionGraph graph={ graph } />)}\n      </div>\n    )\n  }\n\n  return <NoQuestionGraphsMessage />\n}","import { Card, Space, Spin } from 'antd'\n\nconst { Meta } = Card\n\nexport const OverviewTab = ({ result }) => {\n\n  return (\n    <Space direction=\"vertical\" className=\"tab-content\">\n      <Meta description={ result.description } className=\"description\" />\n    </Space>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { List, Spin, Space, Tag, Typography } from 'antd'\nimport { useHelxSearch } from '../'\nimport { Link } from '../link'\n\nconst { Text } = Typography\nconst { CheckableTag: CheckableFacet } = Tag\n\nexport const StudiesTab = ({ result }) => {\n  const { query, fetchStudyVariables } = useHelxSearch()\n  const [studyVariables, setStudyVariables] = useState([])\n  const [facets, setFacets] = useState([])\n  const [selectedFacets, setSelectedFacets] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const handleSelectFacet = (facet, checked) => {\n    const newSelection = new Set(selectedFacets)\n    if (newSelection.has(facet)) {\n      newSelection.delete(facet)\n    } else {\n      newSelection.add(facet)\n    }\n    setSelectedFacets([...newSelection])\n  }\n\n  useEffect(() => {\n    const getVars = async () => {\n      const { result: data } = await fetchStudyVariables(result.id, query)\n      setStudyVariables(data)\n      setFacets(Object.keys(data))\n      setSelectedFacets(Object.keys(data))\n      setLoading(false)\n    }\n    getVars()\n  }, [fetchStudyVariables])\n\n  if (loading) {\n    return <Spin />\n  }\n  \n  return (\n    <Space direction=\"vertical\" className=\"tab-content\">\n      <Space direction=\"horizontal\" size=\"small\">\n        {\n          facets.map(facet => studyVariables[facet] && (\n            <CheckableFacet\n              key={ `search-facet-${ facet }` }\n              checked={ selectedFacets.includes(facet) }\n              onChange={ checked => handleSelectFacet(facet, checked) }\n              children={ `${ facet } (${studyVariables[facet].length})` }\n            />\n          ))\n        }\n      </Space>\n      <List\n        className=\"studies-list\"\n        dataSource={\n          Object.keys(studyVariables)\n            .filter(facet => selectedFacets.includes(facet))\n            .reduce((arr, facet) => [...arr, ...studyVariables[facet]], [])\n            .sort((s, t) => s.c_name < t.c_name ? -1 : 1)\n        }\n        renderItem={ item => (\n          <List.Item>\n            <div className=\"studies-list-item\">\n              <Text className=\"study-name\">\n                { item.c_name }{ ` ` }\n                (<Link to={ item.c_link }>{ item.c_id }</Link>)\n              </Text>\n              <Text className=\"variables-count\">{ item.elements.length } variable{ item.elements.length === 1 ? '' : 's' }</Text>\n            </div>\n          </List.Item>\n        ) }\n      />\n    </Space>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { Space, Spin } from 'antd'\nimport { useHelxSearch } from '../'\nimport { KnowledgeGraphs } from '../graphs'\n\nexport const KnowledgeGraphsTab = ({ result }) => {\n  const { query, fetchGraphs } = useHelxSearch()\n  const [graphs, setGraphs] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const getKgs = async () => {\n      const graphs = await fetchGraphs(result.id)\n      setGraphs(graphs.knowledge)\n      setLoading(false)\n    }\n    getKgs()\n  }, [fetchGraphs, query])\n\n  if (loading) {\n    return <Spin />\n  }\n\n  return (\n    <Space direction=\"vertical\" className=\"tab-content\">\n      <KnowledgeGraphs graphs={ graphs } />\n    </Space>\n  )\n}\n","import { Fragment, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from '../link'\nimport { Button, Card, List, Space, Tag, Typography } from 'antd'\nimport { KnowledgeGraphs, useHelxSearch } from '../'\nimport { OverviewTab } from './overview-tab'\nimport { StudiesTab } from './studies-tab'\nimport { KnowledgeGraphsTab } from './knowledge-graphs-tab'\nimport {\n  ExpandOutlined as ViewIcon,\n  InfoCircleOutlined as OverviewIcon,\n  BookOutlined as StudiesIcon,\n  ShareAltOutlined as KnowledgeGraphsIcon,\n  CodeOutlined as TranQLIcon,\n  QuestionCircleOutlined as QuestionGraphsIcon,\n  QuestionOutlined as AnswerViewerIcon,\n} from '@ant-design/icons'\nimport './result-card.scss'\n\nconst { Meta } = Card\nconst { CheckableTag: CheckableFacet } = Tag\nconst { Text } = Typography\n\nexport const SearchResultCard = ({ index, result, openModalHandler }) => {\n  return (\n    <Fragment>\n      <Card\n        className=\"result-card\"\n        title={ result.name }\n        onClick={ openModalHandler }\n        extra={ <Button onClick={ openModalHandler } type=\"link\" icon={ <ViewIcon /> } /> }\n        actions={ [<br />] }\n      >\n        <Meta description={ result.description } className=\"description\" />\n      </Card>\n   </Fragment>\n  )\n}\n\nSearchResultCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  result: PropTypes.object.isRequired,\n  openModalHandler: PropTypes.func.isRequired,\n}","import { Fragment } from 'react'\n\nexport const AnswerViewerTab = () => {\n  return (\n    <Fragment>\n      Answer Viewer\n    </Fragment>\n  )\n}\n\n","import { Fragment } from 'react'\nimport { Typography } from 'antd'\n\nconst { Text } = Typography\n\nexport const OverviewTab = ({ result }) => {\n  return (\n    <Fragment>\n      <Text>{ result.description }</Text>\n    </Fragment>\n  )\n}\n","import { Fragment, useEffect, useState } from 'react'\nimport { Collapse, List, Space, Tag, Typography } from 'antd'\nimport { Link } from '../../link'\nimport './studies-tab.css'\n\nconst { Text } = Typography\nconst { CheckableTag: CheckableFacet } = Tag\nconst { Panel } = Collapse\n\nexport const StudiesTab = ({ studies }) => {\n  const [facets, setFacets] = useState([])\n  const [selectedFacets, setSelectedFacets] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const handleSelectFacet = (facet, checked) => {\n    const newSelection = new Set(selectedFacets)\n    if (newSelection.has(facet)) {\n      newSelection.delete(facet)\n    } else {\n      newSelection.add(facet)\n    }\n    setSelectedFacets([...newSelection])\n  }\n\n  useEffect(() => {\n    setFacets(Object.keys(studies))\n    setSelectedFacets(Object.keys(studies))\n  }, [studies])\n\n  return (\n    <Fragment>\n      <Space direction=\"horizontal\" size=\"small\">\n        {\n          facets.map(facet => studies[facet] && (\n            <CheckableFacet\n              key={ `search-facet-${ facet }` }\n              checked={ selectedFacets.includes(facet) }\n              onChange={ checked => handleSelectFacet(facet, checked) }\n              children={ `${ facet } (${studies[facet].length})` }\n            />\n          ))\n        }\n      </Space>\n      <Collapse ghost className=\"variables-collapse\">\n        {\n          Object.keys(studies)\n            .filter(facet => selectedFacets.includes(facet))\n            .reduce((arr, facet) => [...arr, ...studies[facet]], [])\n            .sort((s, t) => s.c_name < t.c_name ? -1 : 1)\n            .map(item => (\n              <Panel\n                key={ `panel_${ item.c_name }` }\n                header={\n                  <Text>\n                    { item.c_name }{ ` ` }\n                    (<Link to={ item.c_link }>{ item.c_id }</Link>)\n                  </Text>\n                }\n                extra={ <Text>{ item.elements.length } variable{ item.elements.length === 1 ? '' : 's' }</Text> }\n              >\n                <List\n                  className=\"study-variables-list\"\n                  dataSource={ item.elements }\n                  renderItem={ variable => (\n                    <div className=\"study-variables-list-item\">\n                      <Text className=\"variable-name\"> { variable.name } (<a href={ variable.e_link }>{ variable.id }</a>)</Text><br />\n                      <Text className=\"variable-description\"> { variable.description }</Text>\n                    </div>\n                  ) }\n                />\n              </Panel>\n            ))\n        }\n      </Collapse>\n   </Fragment>\n  )\n}","import { Fragment, useEffect, useState } from 'react'\nimport { Typography } from 'antd'\nimport { KnowledgeGraphs } from '../../'\n\nexport const KnowledgeGraphsTab = ({ graphs }) => {\n  return (\n    <Fragment>\n      <KnowledgeGraphs graphs={ graphs } />\n    </Fragment> \n  )\n}\n","import { Fragment, useCallback, useMemo, useState } from 'react'\nimport axios from 'axios'\nimport { Button, Divider, Input, Spin, Typography } from 'antd'\nimport ForceGraph2D from 'react-force-graph-2d'\nimport { useHelxSearch } from '../../'\nimport { Link } from '../../link'\nimport { RocketOutlined as QueryIcon } from '@ant-design/icons'\nimport { SizeMe } from 'react-sizeme'\nimport './tranql-tab.css'\n\naxios.defaults.timeout = 30000\n\nconst { Text } = Typography\nconst { TextArea } = Input\n\nexport const TranQLTab = ({ result }) => {\n  const { query } = useHelxSearch()\n\n  const initialTranqlQuery = useMemo(() => `select gene->disease\n  from \"/graph/gamma/quick\"\n where ${ result.type }=\"${ result.name.toLowerCase() }\"`, [result])\n  const [tranqlQuery, setTranqlQuery] = useState(initialTranqlQuery)\n\n  const [hasSearched, setHasSearched] = useState(false)\n  const [busy,setBusy] = useState(false)\n\n  const [nodes, setNodes] = useState([])\n  const [edges, setEdges] = useState([])\n\n  const handleChangeTranqlQuery = event => {\n    setTranqlQuery(event.target.value)\n  }\n\n  const handlePressEnter = event => {\n    if (event.ctrlKey) {\n      submitTranqlQuery()\n    }\n  }\n\n  const submitTranqlQuery = useCallback(async () => {\n    setBusy(true)\n    setHasSearched(false)\n    const headers = {\n      'Content-Type': 'text/plain',\n    }\n    try {\n      const { data } = await axios({\n        method: 'POST',\n        url: 'https://tranql.renci.org/tranql/query?dynamic_id_resolution=true&asynchronous=true',\n        data: tranqlQuery,\n        headers,\n      })\n      if (!data) {\n        console.log('no data')\n        return\n      }\n      setNodes(data.knowledge_graph.nodes)\n      setEdges(data.knowledge_graph.edges.map(edge => ({ source: edge.source_id, target: edge.target_id })))\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setBusy(false)\n      setHasSearched(true)\n    }\n  }, [result, tranqlQuery])\n\n  return (\n    <Fragment>\n      <TextArea className=\"tranql-query-textarea\" value={ tranqlQuery } onChange={ handleChangeTranqlQuery } rows=\"4\" onPressEnter={ handlePressEnter } />\n      \n      <Button onClick={ submitTranqlQuery } type=\"primary\" ghost block icon={ <QueryIcon rotate={ 90 } style={{ padding: '0' }} /> } loading={ busy } />\n      \n      <br /><br />\n      <Link to={ `https://heal.renci.org/tranql/?q=${ encodeURI(tranqlQuery) }` }>View in TranQL</Link>\n      <br />\n      \n      <Divider />\n      \n      { hasSearched && !nodes.length && !edges.length && <Text type=\"warning\">no response from tranql query</Text>}\n      \n      <SizeMe>\n        {\n          ({ size }) => (\n            <ForceGraph2D\n              height={ 575 }\n              width={ size.width }\n              graphData={{ nodes: nodes, links: edges }}\n              nodeLabel=\"id\"\n              linkColor={ () => 'rgba(0,0,0,0.2)' }\n              enablePointerInteraction={ true }\n              d3VelocityDecay={ 0.25 }\n            />\n          )\n        }\n      </SizeMe>\n    </Fragment>\n  )\n}\n\n","import { Fragment, useEffect, useState } from 'react'\nimport { Typography } from 'antd'\nimport { QuestionGraphs } from '../../graphs'\n\nexport const QuestionGraphsTab = ({ graphs }) => {\n  return (\n    <Fragment>\n      <QuestionGraphs graphs={ graphs } />\n    </Fragment> \n  )\n}\n","import { useEffect, useState } from 'react'\nimport { Menu, Modal, Space, Typography } from 'antd'\nimport './result-modal.css'\nimport { useHelxSearch } from '../'\nimport { OverviewTab, StudiesTab, KnowledgeGraphsTab, TranQLTab, QuestionGraphsTab, AnswerViewerTab } from './tabs'\nimport {\n  InfoCircleOutlined as OverviewIcon,\n  BookOutlined as StudiesIcon,\n  ShareAltOutlined as KnowledgeGraphsIcon,\n  CodeOutlined as TranQLIcon,\n  QuestionCircleOutlined as QuestionGraphsIcon,\n  QuestionOutlined as AnswerViewerIcon,\n} from '@ant-design/icons'\n\nconst { Text, Title } = Typography\n\nexport const SearchResultModal = ({ result, visible, closeHandler }) => {\n  const [currentTab, setCurrentTab] = useState('overview')\n  const { fetchGraphs, fetchStudyVariables, query } = useHelxSearch()\n  const [graphs, setGraphs] = useState([])\n  const [studies, setStudies] = useState([])\n\n  useEffect(() => {\n    setCurrentTab('overview')\n    if (!result) {\n      return\n    }\n    const getVars = async () => {\n      const { result: data } = await fetchStudyVariables(result.id, query)\n      setStudies(data)\n    }\n    const getGraphs = async () => {\n      const graphs = await fetchGraphs(result.id)\n      setGraphs(graphs)\n    }\n    getVars()\n    getGraphs()\n  }, [fetchGraphs, fetchStudyVariables, result, query])\n\n  if (!result) {\n    return null\n  }\n\n  const tabs = {\n    'overview':      { title: 'Overview',            icon: <OverviewIcon />,         content: <OverviewTab result={ result } />, },\n    'studies':       { title: 'Studies',             icon: <StudiesIcon />,          content: <StudiesTab studies={ studies } />, },\n    'kgs':           { title: 'Knowledge Graphs',    icon: <KnowledgeGraphsIcon />,  content: <KnowledgeGraphsTab graphs={ graphs.knowledge } />, },\n    'qgs':           { title: 'Question Graphs',     icon: 'Q',                      content: <QuestionGraphsTab graphs={ graphs.question } />, },\n    'answer-viewer': { title: 'Answer Viewer',       icon: 'A',                      content: <AnswerViewerTab result={ result } /> },\n    'tranql':        { title: 'TranQL',              icon: <TranQLIcon />,           content: <TranQLTab result={ result } />, },\n  }\n\n  return (\n    <Modal\n      title={ `${ result.name } (${ result.type })` }\n      visible={ visible }\n      onOk={ closeHandler }\n      okText=\"Close\"\n      onCancel={ closeHandler }\n      width={ 1200 }\n      style={{ top: 135 }}\n      bodyStyle={{ padding: `0`, minHeight: `50vh` }}\n      cancelButtonProps={{ hidden: true }}\n    >\n      <Space direction=\"horizontal\" align=\"start\">\n        <Menu\n          className=\"tab-menu\"\n          defaultSelectedKeys={ ['overview'] }\n          mode=\"inline\"\n          theme=\"light\"\n        >\n          {\n            Object.keys(tabs).map(key => (\n              <Menu.Item className=\"tab-menu-item\" key={ key } onClick={ () => setCurrentTab(key) }>\n                <span className=\"tab-icon\">{ tabs[key].icon }</span> &nbsp; <span className=\"tab-name\">{ tabs[key].title }</span>\n              </Menu.Item>\n            ))\n          }\n        </Menu>\n        <div className=\"modal-content-container\" children={ tabs[currentTab].content } />\n      </Space>\n    </Modal>\n  )\n}\n","import React, { Fragment, useEffect, useState, useMemo } from 'react'\nimport { Link } from '../link'\nimport { Button, Radio, notification, Spin, Menu, Tooltip, Typography } from 'antd'\nimport {\n  LinkOutlined as LinkIcon,\n  TableOutlined as GridViewIcon,\n  UnorderedListOutlined as ListViewIcon,\n} from '@ant-design/icons'\nimport { PaginationTray, SearchResultCard, SearchResultModal, useHelxSearch } from '../'\nimport pluralize from 'pluralize'\n\nimport './results.css'\n\nconst { Text } = Typography\nconst { SubMenu } = Menu\n\nconst GRID = 'GRID'\nconst LIST = 'LIST'\n\nexport const SearchResults = () => {\n  const { basePath, query, results, totalResults, perPage, currentPage, pageCount, isLoadingResults, error, setSelectedResult } = useHelxSearch()\n  const [layout, setLayout] = useState(GRID)\n  const [selectedResultType, setSelectedResultType] = useState(null)\n\n\n  const resultTypes = useMemo(() => {\n    return [...new Set(results.map(r => r.type))]\n  }, [results])\n\n  useEffect(() => {\n    if (resultTypes.length) {\n      setSelectedResultType(resultTypes[0])\n    }\n  }, [resultTypes])\n\n  const filteredResults = useMemo(() => {\n    if (!selectedResultType) {\n      return []\n    }\n    return results.filter(result => result.type === selectedResultType)\n  }, [results, selectedResultType])\n\n  const NotifyLinkCopied = () => {\n    notification.open({ key: 'key', message: 'Link copied to clipboard'})\n    navigator.clipboard.writeText(window.location.href)\n  }\n\n  const handleClickResultType = type => event => {\n    setSelectedResultType(type)\n  }\n\n  const handleChangeLayout = event => setLayout(event.target.value)\n\n  const MemoizedResultsHeader = useMemo(() => (\n    <div className=\"header\">\n      <div className=\"results-summary\">\n        <Text>\"{ query }\" returned { filteredResults.length } { pluralize(selectedResultType || '') }</Text> \n      </div>\n      <div className=\"shareable-link\">\n        <Tooltip title=\"Shareable link\" placement=\"top\">\n          <Link to={ `${ basePath }?q=${ query }&p=${ currentPage }` } onClick={ NotifyLinkCopied }><LinkIcon /></Link>\n        </Tooltip>\n      </div>\n      <div className=\"layout-config\">\n        <Tooltip title=\"Toggle Layout\" placement=\"top\">\n          <Radio.Group value={ layout } onChange={ handleChangeLayout }>\n            <Radio.Button value={ GRID }><GridViewIcon /></Radio.Button>\n            <Radio.Button value={ LIST }><ListViewIcon /></Radio.Button>\n          </Radio.Group>\n        </Tooltip>\n      </div>\n    </div>\n  ), [currentPage, layout, pageCount, selectedResultType, totalResults, query])\n\n  if (isLoadingResults) {\n    return <Spin style={{ display: 'block', margin: '4rem' }} />\n  }\n\n  return (\n    <Fragment>\n\n      { error && <span>{ error.message }</span> }\n\n      {\n        query && !error.message && (\n          <div className=\"results\">\n            <Menu mode=\"horizontal\" className=\"types-menu\" selectedKeys={ [selectedResultType] }>\n              {\n                resultTypes && resultTypes.filter(type => !!type).map((type, i) => (\n                  <Menu.Item key={ type } onClick={ handleClickResultType(type) }>{ pluralize(type) }</Menu.Item>\n                ))\n              }\n            </Menu>\n            { filteredResults.length >= 1 && MemoizedResultsHeader }\n\n            <div className={ layout === GRID ? 'results-list grid' : 'results-list list' }>\n              {\n                filteredResults.map((result, i) => {\n                  const index = (currentPage - 1) * perPage + i + 1\n                  return (\n                    <SearchResultCard\n                      key={ `${query}_result_${index}` }\n                      index={ index }\n                      result={ result }\n                      openModalHandler={ () => setSelectedResult(result) }\n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        )\n      }\n\n      <br/><br/>\n\n      { pageCount > 1 && <PaginationTray count={ filteredResults.length } /> }\n\n    </Fragment>\n  )\n}\n","import PropTypes from 'prop-types'\nimport { List } from 'antd'\nimport { Link } from './link'\n\nexport const VariablesList = ({ studyId, variables }) => {\n  return (\n    <List\n      header=\"Variables\"\n      dataSource={variables}\n      renderItem={variable => (\n        <List.Item key={variable.id}>\n          <Link to={'variable.e_link'}>{'variable.id'}: {'variable.id'}</Link>\n        </List.Item>\n      )}\n    />\n  )\n}\n\nVariablesList.propTypes = {\n  studyId: PropTypes.string.isRequired,\n  variables: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    e_link: PropTypes.string.isRequired,\n  })).isRequired,\n}\n"],"names":["PaginationTray","count","useHelxSearch","basePath","query","currentPage","Space","role","className","Pagination","current","defaultPageSize","total","showTotal","onChange","page","pageSize","navigate","showSizeChanger","HelxSearchContext","createContext","useContext","tempSearchFacets","sort","f","g","toLowerCase","HelxSearch","searchURL","children","useState","setQuery","isLoadingResults","setIsLoadingResults","error","setError","results","setResults","totalResults","setTotalResults","setCurrentPage","pageCount","setPageCount","location","useLocation","selectedResult","setSelectedResult","inputRef","useRef","useNavigate","useEffect","handleKeyPress","event","keyCode","preventDefault","select","window","scroll","top","addEventListener","removeEventListener","queryParams","URLSearchParams","search","get","validationReducer","buckets","hit","result","description","trim","name","valid","invalid","params","index","offset","size","axios","response","status","data","hits","unsortedHits","map","r","_source","reduce","length","console","total_items","log","message","fetchResults","Math","ceil","fetchGraphs","useCallback","tag_id","unique_id","knowledge","graph","knowledge_graph","question","question_graph","fetchStudyVariables","_id","_query","concept","Provider","value","doSearch","queryString","trimmedQuery","perPage","facets","SearchResultModal","visible","closeHandler","SearchForm","searchTerm","setSearchTerm","Form","onFinish","src","HeLxLogo","width","Input","ref","allowClear","autoFocus","placeholder","target","onKeyDown","Button","htmlType","type","biolink_lookup","kgLink","curie","splitCurrie","split","prefix","suffix","Object","keys","find","k","ExternalLink","to","href","rel","Link","props","mailtoPattern","RegExp","externalUrlMatch","exec","mailtoMatch","LinkComponent","ReactLink","KnowledgeGraph","interactions","setInteractions","nodes","forEach","sourceNode","outgoingEdge","edges","edge","source_id","id","targetNode","node","target_id","newInteraction","source","publications","interaction","i","Fragment","publication","replace","NoKnowledgeGraphsMessage","KnowledgeGraphs","graphs","QuestionGraph","NoQuestionGraphsMessage","QuestionGraphs","Card","Typography","Tag","Meta","SearchResultCard","openModalHandler","title","onClick","extra","icon","actions","propTypes","PropTypes","AnswerViewerTab","Text","OverviewTab","CheckableFacet","Panel","Collapse","StudiesTab","studies","setFacets","selectedFacets","setSelectedFacets","direction","facet","checked","includes","newSelection","Set","has","add","handleSelectFacet","ghost","filter","arr","s","t","c_name","item","header","c_link","c_id","elements","List","dataSource","renderItem","variable","e_link","KnowledgeGraphsTab","TextArea","TranQLTab","initialTranqlQuery","useMemo","tranqlQuery","setTranqlQuery","hasSearched","setHasSearched","busy","setBusy","setNodes","setEdges","submitTranqlQuery","headers","method","url","rows","onPressEnter","ctrlKey","block","rotate","style","padding","loading","encodeURI","Divider","SizeMe","height","graphData","links","nodeLabel","linkColor","enablePointerInteraction","d3VelocityDecay","QuestionGraphsTab","currentTab","setCurrentTab","setGraphs","setStudies","getVars","getGraphs","tabs","content","Modal","onOk","okText","onCancel","bodyStyle","minHeight","cancelButtonProps","hidden","align","Menu","defaultSelectedKeys","mode","theme","key","GRID","SearchResults","layout","setLayout","selectedResultType","setSelectedResultType","resultTypes","filteredResults","NotifyLinkCopied","notification","navigator","clipboard","writeText","handleClickResultType","handleChangeLayout","MemoizedResultsHeader","pluralize","Tooltip","placement","Radio","Spin","display","margin","selectedKeys","isRequired"],"sourceRoot":""}